

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Tue Apr 19 17:15:10 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    13  0000                     
    14                           	psect	nvCOMRAM
    15  000008                     __pnvCOMRAM:
    16                           	opt stack 0
    17  000008                     _counter:
    18                           	opt stack 0
    19  000008                     	ds	1
    20  0000                     _ADCON1	set	4033
    21  0000                     _CMCON	set	4020
    22  0000                     _PORTA	set	3968
    23  0000                     _PORTB	set	3969
    24  0000                     _PORTBbits	set	3969
    25  0000                     _PORTC	set	3970
    26  0000                     _PORTCbits	set	3970
    27  0000                     _TRISA	set	3986
    28  0000                     _TRISAbits	set	3986
    29  0000                     _TRISB	set	3987
    30  0000                     _TRISC	set	3988
    31                           
    32                           ; #config settings
    33                           
    34                           	psect	cinit
    35  007E96                     __pcinit:
    36                           	opt stack 0
    37  007E96                     start_initialization:
    38                           	opt stack 0
    39  007E96                     __initialization:
    40                           	opt stack 0
    41  007E96                     end_of_initialization:
    42                           	opt stack 0
    43  007E96                     __end_of__initialization:
    44                           	opt stack 0
    45  007E96  0100               	movlb	0
    46  007E98  EFAD  F03F         	goto	_main	;jump to C main() function
    47                           
    48                           	psect	cstackCOMRAM
    49  000001                     __pcstackCOMRAM:
    50                           	opt stack 0
    51  000001                     ??_shift_out:
    52  000001                     ?___awmod:
    53                           	opt stack 0
    54  000001                     ___awmod@dividend:
    55                           	opt stack 0
    56                           
    57                           ; 2 bytes @ 0x0
    58  000001                     	ds	2
    59  000003                     shift_out@data:
    60                           	opt stack 0
    61  000003                     ___awmod@divisor:
    62                           	opt stack 0
    63                           
    64                           ; 2 bytes @ 0x2
    65  000003                     	ds	1
    66  000004                     shift_out@i:
    67                           	opt stack 0
    68                           
    69                           ; 1 bytes @ 0x3
    70  000004                     	ds	1
    71  000005                     ___awmod@counter:
    72                           	opt stack 0
    73                           
    74                           ; 1 bytes @ 0x4
    75  000005                     	ds	1
    76  000006                     ___awmod@sign:
    77                           	opt stack 0
    78                           
    79                           ; 1 bytes @ 0x5
    80  000006                     	ds	1
    81  000007                     ??_main:
    82                           
    83                           ; 0 bytes @ 0x6
    84  000007                     	ds	1
    85                           
    86 ;;
    87 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
    88 ;;
    89 ;; *************** function _main *****************
    90 ;; Defined at:
    91 ;;		line 42 in file "main.c"
    92 ;; Parameters:    Size  Location     Type
    93 ;;		None
    94 ;; Auto vars:     Size  Location     Type
    95 ;;		None
    96 ;; Return value:  Size  Location     Type
    97 ;;		None               void
    98 ;; Registers used:
    99 ;;		wreg, status,2, status,0, cstack
   100 ;; Tracked objects:
   101 ;;		On entry : 0/0
   102 ;;		On exit  : 0/0
   103 ;;		Unchanged: 0/0
   104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   105 ;;      Params:         0       0       0       0       0       0       0       0       0
   106 ;;      Locals:         0       0       0       0       0       0       0       0       0
   107 ;;      Temps:          1       0       0       0       0       0       0       0       0
   108 ;;      Totals:         1       0       0       0       0       0       0       0       0
   109 ;;Total ram usage:        1 bytes
   110 ;; Hardware stack levels required when called:    1
   111 ;; This function calls:
   112 ;;		___awmod
   113 ;;		_shift_out
   114 ;; This function is called by:
   115 ;;		Startup code after reset
   116 ;; This function uses a non-reentrant model
   117 ;;
   118                           
   119                           	psect	text0
   120  007F5A                     __ptext0:
   121                           	opt stack 0
   122  007F5A                     _main:
   123                           	opt stack 30
   124                           
   125                           ;main.c: 43: PORTA = 0x00;
   126                           
   127                           ;incstack = 0
   128  007F5A  0E00               	movlw	0
   129  007F5C  6E80               	movwf	3968,c	;volatile
   130                           
   131                           ;main.c: 44: TRISA = 0xFF;
   132  007F5E  6892               	setf	3986,c	;volatile
   133                           
   134                           ;main.c: 45: TRISAbits.RA5 = 0;
   135  007F60  9A92               	bcf	3986,5,c	;volatile
   136                           
   137                           ;main.c: 46: ADCON1 = 0x0F;
   138  007F62  0E0F               	movlw	15
   139  007F64  6EC1               	movwf	4033,c	;volatile
   140                           
   141                           ;main.c: 47: CMCON = 0x07;
   142  007F66  0E07               	movlw	7
   143  007F68  6EB4               	movwf	4020,c	;volatile
   144                           
   145                           ;main.c: 48: PORTB = 0x00;
   146  007F6A  0E00               	movlw	0
   147  007F6C  6E81               	movwf	3969,c	;volatile
   148                           
   149                           ;main.c: 49: TRISB = 0x00;
   150  007F6E  0E00               	movlw	0
   151  007F70  6E93               	movwf	3987,c	;volatile
   152                           
   153                           ;main.c: 51: PORTC = 0x00;
   154  007F72  0E00               	movlw	0
   155  007F74  6E82               	movwf	3970,c	;volatile
   156                           
   157                           ;main.c: 52: TRISC = 0x00;
   158  007F76  0E00               	movlw	0
   159  007F78  6E94               	movwf	3988,c	;volatile
   160                           
   161                           ;main.c: 54: PORTBbits.RB3 = 1;
   162  007F7A  8681               	bsf	3969,3,c	;volatile
   163  007F7C                     l760:
   164                           
   165                           ;main.c: 57: counter = (counter+1) % 255;
   166  007F7C  0E01               	movlw	1
   167  007F7E  2408               	addwf	_counter,w,c
   168  007F80  6E01               	movwf	___awmod@dividend,c
   169  007F82  6A02               	clrf	___awmod@dividend+1,c
   170  007F84  0E00               	movlw	0
   171  007F86  2202               	addwfc	___awmod@dividend+1,f,c
   172  007F88  0E00               	movlw	0
   173  007F8A  6E04               	movwf	___awmod@divisor+1,c
   174  007F8C  6803               	setf	___awmod@divisor,c
   175  007F8E  EC75  F03F         	call	___awmod	;wreg free
   176  007F92  5001               	movf	?___awmod,w,c
   177  007F94  6E08               	movwf	_counter,c
   178                           
   179                           ;main.c: 58: shift_out(counter);
   180  007F96  5008               	movf	_counter,w,c
   181  007F98  EC4E  F03F         	call	_shift_out
   182                           
   183                           ;main.c: 60: _delay((unsigned long)((20)*(20000000/4000.0)));
   184  007F9C  0E82               	movlw	130
   185  007F9E  6E07               	movwf	??_main& (0+255),c
   186  007FA0  0EDE               	movlw	222
   187  007FA2                     u177:
   188  007FA2  2EE8               	decfsz	wreg,f,c
   189  007FA4  D7FE               	goto	u177
   190  007FA6  2E07               	decfsz	??_main& (0+255),f,c
   191  007FA8  D7FC               	goto	u177
   192                           
   193                           ;main.c: 61: _delay((unsigned long)((20)*(20000000/4000.0)));
   194  007FAA  0E82               	movlw	130
   195  007FAC  6E07               	movwf	??_main& (0+255),c
   196  007FAE  0EDE               	movlw	222
   197  007FB0                     u187:
   198  007FB0  2EE8               	decfsz	wreg,f,c
   199  007FB2  D7FE               	goto	u187
   200  007FB4  2E07               	decfsz	??_main& (0+255),f,c
   201  007FB6  D7FC               	goto	u187
   202                           
   203                           ;main.c: 62: _delay((unsigned long)((20)*(20000000/4000.0)));
   204  007FB8  0E82               	movlw	130
   205  007FBA  6E07               	movwf	??_main& (0+255),c
   206  007FBC  0EDE               	movlw	222
   207  007FBE                     u197:
   208  007FBE  2EE8               	decfsz	wreg,f,c
   209  007FC0  D7FE               	goto	u197
   210  007FC2  2E07               	decfsz	??_main& (0+255),f,c
   211  007FC4  D7FC               	goto	u197
   212                           
   213                           ;main.c: 63: _delay((unsigned long)((20)*(20000000/4000.0)));
   214  007FC6  0E82               	movlw	130
   215  007FC8  6E07               	movwf	??_main& (0+255),c
   216  007FCA  0EDE               	movlw	222
   217  007FCC                     u207:
   218  007FCC  2EE8               	decfsz	wreg,f,c
   219  007FCE  D7FE               	goto	u207
   220  007FD0  2E07               	decfsz	??_main& (0+255),f,c
   221  007FD2  D7FC               	goto	u207
   222                           
   223                           ;main.c: 64: _delay((unsigned long)((20)*(20000000/4000.0)));
   224  007FD4  0E82               	movlw	130
   225  007FD6  6E07               	movwf	??_main& (0+255),c
   226  007FD8  0EDE               	movlw	222
   227  007FDA                     u217:
   228  007FDA  2EE8               	decfsz	wreg,f,c
   229  007FDC  D7FE               	goto	u217
   230  007FDE  2E07               	decfsz	??_main& (0+255),f,c
   231  007FE0  D7FC               	goto	u217
   232                           
   233                           ;main.c: 65: _delay((unsigned long)((20)*(20000000/4000.0)));
   234  007FE2  0E82               	movlw	130
   235  007FE4  6E07               	movwf	??_main& (0+255),c
   236  007FE6  0EDE               	movlw	222
   237  007FE8                     u227:
   238  007FE8  2EE8               	decfsz	wreg,f,c
   239  007FEA  D7FE               	goto	u227
   240  007FEC  2E07               	decfsz	??_main& (0+255),f,c
   241  007FEE  D7FC               	goto	u227
   242                           
   243                           ;main.c: 66: _delay((unsigned long)((20)*(20000000/4000.0)));
   244  007FF0  0E82               	movlw	130
   245  007FF2  6E07               	movwf	??_main& (0+255),c
   246  007FF4  0EDE               	movlw	222
   247  007FF6                     u237:
   248  007FF6  2EE8               	decfsz	wreg,f,c
   249  007FF8  D7FE               	goto	u237
   250  007FFA  2E07               	decfsz	??_main& (0+255),f,c
   251  007FFC  D7FC               	goto	u237
   252  007FFE  D7BE               	goto	l760
   253  008000                     __end_of_main:
   254                           	opt stack 0
   255                           wreg	equ	0xFE8
   256                           
   257 ;; *************** function _shift_out *****************
   258 ;; Defined at:
   259 ;;		line 15 in file "main.c"
   260 ;; Parameters:    Size  Location     Type
   261 ;;  data            1    wreg     unsigned char 
   262 ;; Auto vars:     Size  Location     Type
   263 ;;  data            1    2[COMRAM] unsigned char 
   264 ;;  i               1    3[COMRAM] unsigned char 
   265 ;; Return value:  Size  Location     Type
   266 ;;		None               void
   267 ;; Registers used:
   268 ;;		wreg, status,2, status,0
   269 ;; Tracked objects:
   270 ;;		On entry : 0/0
   271 ;;		On exit  : 0/0
   272 ;;		Unchanged: 0/0
   273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   274 ;;      Params:         0       0       0       0       0       0       0       0       0
   275 ;;      Locals:         2       0       0       0       0       0       0       0       0
   276 ;;      Temps:          2       0       0       0       0       0       0       0       0
   277 ;;      Totals:         4       0       0       0       0       0       0       0       0
   278 ;;Total ram usage:        4 bytes
   279 ;; Hardware stack levels used:    1
   280 ;; This function calls:
   281 ;;		Nothing
   282 ;; This function is called by:
   283 ;;		_main
   284 ;; This function uses a non-reentrant model
   285 ;;
   286                           
   287                           	psect	text1
   288  007E9C                     __ptext1:
   289                           	opt stack 0
   290  007E9C                     _shift_out:
   291                           	opt stack 30
   292                           
   293                           ;incstack = 0
   294                           ;shift_out@data stored from wreg
   295  007E9C  6E03               	movwf	shift_out@data,c
   296                           
   297                           ;main.c: 17: PORTBbits.RB1 = 0;
   298  007E9E  9281               	bcf	3969,1,c	;volatile
   299                           
   300                           ;main.c: 19: PORTBbits.RB0 = 0;
   301  007EA0  9081               	bcf	3969,0,c	;volatile
   302                           
   303                           ;main.c: 20: for (uint8_t i = 0; i<8; i++) {
   304  007EA2  0E00               	movlw	0
   305  007EA4  6E04               	movwf	shift_out@i,c
   306  007EA6                     l642:
   307  007EA6  0E07               	movlw	7
   308  007EA8  6404               	cpfsgt	shift_out@i,c
   309  007EAA  D001               	goto	l646
   310  007EAC  D01C               	goto	l32
   311  007EAE                     l646:
   312                           
   313                           ;main.c: 21: PORTCbits.RC7 = (data >> i) & 0x01;
   314  007EAE  C004  F001         	movff	shift_out@i,??_shift_out
   315  007EB2  C003  F002         	movff	shift_out@data,??_shift_out+1
   316  007EB6  2A01               	incf	??_shift_out,f,c
   317  007EB8  D002               	goto	u24
   318  007EBA                     u25:
   319  007EBA  90D8               	bcf	status,0,c
   320  007EBC  3202               	rrcf	??_shift_out+1,f,c
   321  007EBE                     u24:
   322  007EBE  2E01               	decfsz	??_shift_out,f,c
   323  007EC0  D7FC               	goto	u25
   324  007EC2  0E01               	movlw	1
   325  007EC4  1602               	andwf	??_shift_out+1,f,c
   326  007EC6  3202               	rrcf	??_shift_out+1,f,c
   327  007EC8  3202               	rrcf	??_shift_out+1,f,c
   328  007ECA  5082               	movf	3970,w,c	;volatile
   329  007ECC  1802               	xorwf	??_shift_out+1,w,c
   330  007ECE  0B7F               	andlw	-129
   331  007ED0  1802               	xorwf	??_shift_out+1,w,c
   332  007ED2  6E82               	movwf	3970,c	;volatile
   333                           
   334                           ;main.c: 22: if (i==7) {
   335  007ED4  0E07               	movlw	7
   336  007ED6  1804               	xorwf	shift_out@i,w,c
   337  007ED8  B4D8               	btfsc	status,2,c
   338                           
   339                           ;main.c: 24: PORTBbits.RB0 = 1;
   340  007EDA  8081               	bsf	3969,0,c	;volatile
   341                           
   342                           ;main.c: 25: }
   343                           ;main.c: 28: PORTBbits.RB1 = 1;
   344  007EDC  8281               	bsf	3969,1,c	;volatile
   345                           
   346                           ;main.c: 29: __nop();
   347  007EDE  F000               	nop	
   348                           
   349                           ;main.c: 31: PORTBbits.RB1 = 0;
   350  007EE0  9281               	bcf	3969,1,c	;volatile
   351  007EE2  2A04               	incf	shift_out@i,f,c
   352  007EE4  D7E0               	goto	l642
   353  007EE6                     l32:
   354                           
   355                           ;main.c: 33: }
   356                           ;main.c: 37: PORTBbits.RB0 = 0;
   357  007EE6  9081               	bcf	3969,0,c	;volatile
   358                           
   359                           ;main.c: 39: return;
   360  007EE8  0012               	return		;funcret
   361  007EEA                     __end_of_shift_out:
   362                           	opt stack 0
   363                           wreg	equ	0xFE8
   364                           status	equ	0xFD8
   365                           
   366 ;; *************** function ___awmod *****************
   367 ;; Defined at:
   368 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
   369 ;; Parameters:    Size  Location     Type
   370 ;;  dividend        2    0[COMRAM] int 
   371 ;;  divisor         2    2[COMRAM] int 
   372 ;; Auto vars:     Size  Location     Type
   373 ;;  sign            1    5[COMRAM] unsigned char 
   374 ;;  counter         1    4[COMRAM] unsigned char 
   375 ;; Return value:  Size  Location     Type
   376 ;;                  2    0[COMRAM] int 
   377 ;; Registers used:
   378 ;;		wreg, status,2, status,0
   379 ;; Tracked objects:
   380 ;;		On entry : 0/0
   381 ;;		On exit  : 0/0
   382 ;;		Unchanged: 0/0
   383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   384 ;;      Params:         4       0       0       0       0       0       0       0       0
   385 ;;      Locals:         2       0       0       0       0       0       0       0       0
   386 ;;      Temps:          0       0       0       0       0       0       0       0       0
   387 ;;      Totals:         6       0       0       0       0       0       0       0       0
   388 ;;Total ram usage:        6 bytes
   389 ;; Hardware stack levels used:    1
   390 ;; This function calls:
   391 ;;		Nothing
   392 ;; This function is called by:
   393 ;;		_main
   394 ;; This function uses a non-reentrant model
   395 ;;
   396                           
   397                           	psect	text2
   398  007EEA                     __ptext2:
   399                           	opt stack 0
   400  007EEA                     ___awmod:
   401                           	opt stack 30
   402                           
   403                           ;incstack = 0
   404  007EEA  0E00               	movlw	0
   405  007EEC  6E06               	movwf	___awmod@sign,c
   406  007EEE  AE02               	btfss	___awmod@dividend+1,7,c
   407  007EF0  D006               	goto	l724
   408  007EF2  6C01               	negf	___awmod@dividend,c
   409  007EF4  1E02               	comf	___awmod@dividend+1,f,c
   410  007EF6  B0D8               	btfsc	status,0,c
   411  007EF8  2A02               	incf	___awmod@dividend+1,f,c
   412  007EFA  0E01               	movlw	1
   413  007EFC  6E06               	movwf	___awmod@sign,c
   414  007EFE                     l724:
   415  007EFE  AE04               	btfss	___awmod@divisor+1,7,c
   416  007F00  D004               	goto	l728
   417  007F02  6C03               	negf	___awmod@divisor,c
   418  007F04  1E04               	comf	___awmod@divisor+1,f,c
   419  007F06  B0D8               	btfsc	status,0,c
   420  007F08  2A04               	incf	___awmod@divisor+1,f,c
   421  007F0A                     l728:
   422  007F0A  5003               	movf	___awmod@divisor,w,c
   423  007F0C  1004               	iorwf	___awmod@divisor+1,w,c
   424  007F0E  B4D8               	btfsc	status,2,c
   425  007F10  D018               	goto	l744
   426  007F12  0E01               	movlw	1
   427  007F14  6E05               	movwf	___awmod@counter,c
   428  007F16  D004               	goto	l734
   429  007F18                     l732:
   430  007F18  90D8               	bcf	status,0,c
   431  007F1A  3603               	rlcf	___awmod@divisor,f,c
   432  007F1C  3604               	rlcf	___awmod@divisor+1,f,c
   433  007F1E  2A05               	incf	___awmod@counter,f,c
   434  007F20                     l734:
   435  007F20  AE04               	btfss	___awmod@divisor+1,7,c
   436  007F22  D7FA               	goto	l732
   437  007F24                     l736:
   438  007F24  5003               	movf	___awmod@divisor,w,c
   439  007F26  5C01               	subwf	___awmod@dividend,w,c
   440  007F28  5004               	movf	___awmod@divisor+1,w,c
   441  007F2A  5802               	subwfb	___awmod@dividend+1,w,c
   442  007F2C  A0D8               	btfss	status,0,c
   443  007F2E  D004               	goto	l740
   444  007F30  5003               	movf	___awmod@divisor,w,c
   445  007F32  5E01               	subwf	___awmod@dividend,f,c
   446  007F34  5004               	movf	___awmod@divisor+1,w,c
   447  007F36  5A02               	subwfb	___awmod@dividend+1,f,c
   448  007F38                     l740:
   449  007F38  90D8               	bcf	status,0,c
   450  007F3A  3204               	rrcf	___awmod@divisor+1,f,c
   451  007F3C  3203               	rrcf	___awmod@divisor,f,c
   452  007F3E  2E05               	decfsz	___awmod@counter,f,c
   453  007F40  D7F1               	goto	l736
   454  007F42                     l744:
   455  007F42  5006               	movf	___awmod@sign,w,c
   456  007F44  B4D8               	btfsc	status,2,c
   457  007F46  D004               	goto	l748
   458  007F48  6C01               	negf	___awmod@dividend,c
   459  007F4A  1E02               	comf	___awmod@dividend+1,f,c
   460  007F4C  B0D8               	btfsc	status,0,c
   461  007F4E  2A02               	incf	___awmod@dividend+1,f,c
   462  007F50                     l748:
   463  007F50  C001  F001         	movff	___awmod@dividend,?___awmod
   464  007F54  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
   465  007F58  0012               	return	
   466  007F5A                     __end_of___awmod:
   467                           	opt stack 0
   468  0000                     wreg	equ	0xFE8
   469                           status	equ	0xFD8
   470                           wreg	equ	0xFE8
   471                           status	equ	0xFD8
   472                           
   473                           	psect	rparam
   474  0000                     wreg	equ	0xFE8
   475                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      7       8
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     457
                                              6 COMRAM     1     1      0
                            ___awmod
                          _shift_out
 ---------------------------------------------------------------------------------
 (1) _shift_out                                            4     4      0      75
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     382
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awmod
   _shift_out

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      7       8       1        8.4%
STACK                0      0       0       2        0.0%
DATA                 0      0       8       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       8      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Tue Apr 19 17:15:10 2016

                     l32 7EE6                       u24 7EBE                       u25 7EBA  
                    l642 7EA6                      l740 7F38                      l732 7F18  
                    l724 7EFE                      l734 7F20                      l646 7EAE  
                    l736 7F24                      l744 7F42                      l728 7F0A  
                    l760 7F7C                      l748 7F50                      u207 7FCC  
                    u217 7FDA                      u227 7FE8                      u237 7FF6  
                    u177 7FA2                      u187 7FB0                      u197 7FBE  
           ___awmod@sign 0006                      wreg 000FE8                     _main 7F5A  
                   start 0800             ___param_bank 000010                    ?_main 0001  
        __end_of___awmod 7F5A                    _CMCON 000FB4                    _PORTA 000F80  
                  _PORTB 000F81                    _PORTC 000F82                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    status 000FD8  
        __initialization 7E96             __end_of_main 8000                   ??_main 0007  
          __activetblptr 000000                   _ADCON1 000FC1                ??___awmod 0005  
        ___awmod@divisor 0003          ___awmod@counter 0005               __accesstop 0060  
__end_of__initialization 7E96            ___rparam_used 000001           __pcstackCOMRAM 0001  
             __pnvCOMRAM 0008       __size_of_shift_out 004E                  __Hparam 0000  
                __Lparam 0000                  ___awmod 7EEA                  __pcinit 7E96  
                __ramtop 0800                  __ptext0 7F5A                  __ptext1 7E9C  
                __ptext2 7EEA                  _counter 0008         ___awmod@dividend 0001  
   end_of_initialization 7E96        __end_of_shift_out 7EEA                _PORTBbits 000F81  
              _PORTCbits 000F82                _TRISAbits 000F92      start_initialization 7E96  
               ?___awmod 0001               shift_out@i 0004                _shift_out 7E9C  
          shift_out@data 0003                 __Hrparam 0000               ?_shift_out 0001  
               __Lrparam 0000         __size_of___awmod 0070            __size_of_main 00A6  
            ??_shift_out 0001  
